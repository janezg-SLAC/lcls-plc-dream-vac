<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="PRG_TURBO_PUMPS" Id="{fe28b3e0-a4e5-4589-97c5-cdcab876d63e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_TURBO_PUMPS
VAR
    bAllTurboPumpRunning : BOOL;
    tAllTurboPumpDelayTime : TIME := T#30s;
    tAllTurboPumpTOF : TOF;

    bMainTurboPumpRunning : BOOL;
    tMainTurboPumpDelayTime : TIME := T#15m;
    tMainTurboPumpTOF : TOF;
    ftPumpsFailed : F_TRIG;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(**Gas Injection Turbo pumps**)
DREAM_NC_PTM_01(i_xExtIlkOK := DREAM_ROUGH1_GPI_02.PG.rPRESS < DREAM_NC_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH1_GPI_02.PG.xPRESS_OK AND
                               DREAM_ROUGH1_VRC_01.iq_stValve.i_xOpnLS);

DREAM_NC_PTM_02(i_xExtIlkOK := DREAM_ROUGH1_GPI_02.PG.rPRESS < DREAM_NC_PTM_02.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH1_GPI_02.PG.xPRESS_OK AND
                               DREAM_ROUGH1_VRC_01.iq_stValve.i_xOpnLS);

(**Differential pumping stations Turbo pumps**)
DREAM_DP1_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_DP1_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

DREAM_DP2_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_DP2_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

DREAM_DP3_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_DP3_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

(**Main Chamber Turbo pumps**)
DREAM_MC_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_MC_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                               DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

DREAM_MC_PTM_02(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_MC_PTM_02.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                               DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

(**Catcher Turbo pumps**)
//Special interlock due to manual valve between turbo pump and ROUGH2_GPI2
DREAM_CAT1_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_CAT1_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                 DREAM_ROUGH2_GPI_03.PG.rPRESS < DREAM_CAT1_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_03.PG.xPRESS_OK AND
                                 DREAM_ROUGH2_VRC_01.i_xOpnLS);


DREAM_CAT2_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_03.PG.rPRESS < DREAM_CAT2_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_03.PG.xPRESS_OK AND
                                 DREAM_ROUGH2_VRC_02.iq_stValve.i_xOpnLS);

(**ROUGHING SECTION TURBO BOOSTER PUMPS**)
DREAM_ROUGH2_PTM_01(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_ROUGH2_PTM_01.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                   DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);

DREAM_ROUGH2_PTM_02(i_xExtIlkOK := DREAM_ROUGH2_GPI_02.PG.rPRESS < DREAM_ROUGH2_PTM_02.iq_stPTM.rBackingPressureSP AND DREAM_ROUGH2_GPI_02.PG.xPRESS_OK AND
                                   DREAM_ROUGH2_VRC_01.iq_stValve.i_xOpnLS);


bAllTurboPumpRunning := DREAM_NC_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_NC_PTM_02.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_DP1_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_DP2_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_DP3_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_MC_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_MC_PTM_02.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_CAT1_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_CAT2_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_ROUGH2_PTM_01.iq_stPTM.eState = E_PumpState.pumpRUNNING AND
                        DREAM_ROUGH2_PTM_02.iq_stPTM.eState = E_PumpState.pumpRUNNING;

tAllTurboPumpTOF(IN := bAllTurboPumpRunning, PT := tAllTurboPumpDelayTime);
bDREAM_TURBOS_ALL_AtSpd := tAllTurboPumpTOF.Q;

(*********SERIAL COMMUNICATION**********)

(*Pfeiffer pumps at Gas Injection*)
//DREAM_NC_PTM_01
(*Assign adresses to the pfeiffer controllers connected to this serial terminal*)
stPfeiffer_CTRL_DREAM_NC_PTM_01[1].iSerialAddress:= 1;
stPfeiffer_CTRL_DREAM_NC_PTM_01[1].xEnableComm:= TRUE;
(*Instanitate the Function block for serial communication with Pfeiffer*)
fbPfeifferCom_DREAM_NC_PTM_01(astPfeifferControl:= stPfeiffer_CTRL_DREAM_NC_PTM_01,
                              astPfeifferStatus:= stPfeiffer_RBK_DREAM_NC_PTM_01,
                              SerialRXBuffer:= SerialRXBuffer_DREAM_NC_PTM_01,
                              SerialTXBuffer:= SerialTXBuffer_DREAM_NC_PTM_01);
(*Copy Status Pv's into the PTM structure*)
DREAM_NC_PTM_01.M_Serial_IO(st_Pfeiffer_RBK:= stPfeiffer_RBK_DREAM_NC_PTM_01[1],
                            st_Pfeiffer_CTRL:= stPfeiffer_CTRL_DREAM_NC_PTM_01[1]);

//DREAM_NC_PTM_02
stPfeiffer_CTRL_DREAM_NC_PTM_02[1].iSerialAddress:= 1;
stPfeiffer_CTRL_DREAM_NC_PTM_02[1].xEnableComm:= TRUE;
fbPfeifferCom_DREAM_NC_PTM_02(astPfeifferControl:= stPfeiffer_CTRL_DREAM_NC_PTM_02,
                              astPfeifferStatus:= stPfeiffer_RBK_DREAM_NC_PTM_02,
                              SerialRXBuffer:= SerialRXBuffer_DREAM_NC_PTM_02,
                              SerialTXBuffer:= SerialTXBuffer_DREAM_NC_PTM_02);

DREAM_NC_PTM_02.M_Serial_IO(st_Pfeiffer_RBK:= stPfeiffer_RBK_DREAM_NC_PTM_02[1],
                            st_Pfeiffer_CTRL:= stPfeiffer_CTRL_DREAM_NC_PTM_02[1]);

//DREAM_DP1_PTM_01
stPfeiffer_CTRL_DREAM_DP1_PTM_01[1].iSerialAddress:= 1;
stPfeiffer_CTRL_DREAM_DP1_PTM_01[1].xEnableComm:= TRUE;
fbPfeifferCom_DREAM_DP1_PTM_01(astPfeifferControl:= stPfeiffer_CTRL_DREAM_DP1_PTM_01,
                               astPfeifferStatus:= stPfeiffer_RBK_DREAM_DP1_PTM_01,
                               SerialRXBuffer:= SerialRXBuffer_DREAM_DP1_PTM_01,
                               SerialTXBuffer:= SerialTXBuffer_DREAM_DP1_PTM_01);

DREAM_DP1_PTM_01.M_Serial_IO(st_Pfeiffer_RBK:= stPfeiffer_RBK_DREAM_DP1_PTM_01[1],
                             st_Pfeiffer_CTRL:= stPfeiffer_CTRL_DREAM_DP1_PTM_01[1]);


(*Leybold pumps at Gas Injection*)
//DREAM_DP2_PTM_01
(*Instanitate the Function block for serial communication with TD20 controller*)
fbTD20Com_DREAM_DP2_PTM_01(SerialRXBuffer:= SerialRXBuffer_DREAM_DP2_PTM_01,
                           SerialTXBuffer:= SerialTXBuffer_DREAM_DP2_PTM_01,
                           astTD20Status=> stTD20_RBK_DREAM_DP2_PTM_01);
(*Copy Status Pv's into the PTM structure*)
DREAM_DP2_PTM_01.M_Serial_IO(i_st_TD20_RBK:= stTD20_RBK_DREAM_DP2_PTM_01);

//DREAM_DP3_PTM_01
fbTD20Com_DREAM_DP3_PTM_01(SerialRXBuffer:= SerialRXBuffer_DREAM_DP3_PTM_01,
                           SerialTXBuffer:= SerialTXBuffer_DREAM_DP3_PTM_01,
                           astTD20Status=> stTD20_RBK_DREAM_DP3_PTM_01);

DREAM_DP3_PTM_01.M_Serial_IO(i_st_TD20_RBK:= stTD20_RBK_DREAM_DP3_PTM_01);

(*Leybold pumps at Main Chamber*)
//DREAM_MC_PTM_01
fbTD20Com_DREAM_MC_PTM_01(SerialRXBuffer:= SerialRXBuffer_DREAM_MC_PTM_01,
                           SerialTXBuffer:= SerialTXBuffer_DREAM_MC_PTM_01,
                           astTD20Status=> stTD20_RBK_DREAM_MC_PTM_01);

DREAM_MC_PTM_01.M_Serial_IO(stTD20_RBK_DREAM_MC_PTM_01);

//DREAM_MC_PTM_02
fbTD20Com_DREAM_MC_PTM_02(SerialRXBuffer:= SerialRXBuffer_DREAM_MC_PTM_02,
                           SerialTXBuffer:= SerialTXBuffer_DREAM_MC_PTM_02,
                           astTD20Status=> stTD20_RBK_DREAM_MC_PTM_02);

DREAM_MC_PTM_02.M_Serial_IO(stTD20_RBK_DREAM_MC_PTM_02);

(*Leybold pumps at Catcher*)
//DREAM_CAT1_PTM_01 (TD400)
fbTD400SerialIO_DREAM_CAT1_PTM_01(iq_stPTM := DREAM_CAT1_PTM_01.iq_stPtm,
                                  iq_stTD400Control := stTD400_CTRL_DREAM_CAT1_PTM_01,
                                  iq_stTD400Status := stTD400_RBK_DREAM_CAT1_PTM_01);

fbTD400Com_DREAM_CAT1_PTM_01(SerialRXBuffer := SerialRXBuffer_DREAM_CAT1_PTM_01,
                             SerialTXBuffer := SerialTXBuffer_DREAM_CAT1_PTM_01,
                             stTD400Control := stTD400_CTRL_DREAM_CAT1_PTM_01,
                             stTD400Status => stTD400_RBK_DREAM_CAT1_PTM_01);

//DREAM_CAT1_PTM_01.M_Serial_IO(stTD400_RBK_DREAM_CAT1_PTM_01);

//DREAM_CAT2_PTM_01 (TD400)
fbTD400SerialIO_DREAM_CAT2_PTM_01(iq_stPTM := DREAM_CAT2_PTM_01.iq_stPtm,
                                  iq_stTD400Control := stTD400_CTRL_DREAM_CAT2_PTM_01,
                                  iq_stTD400Status := stTD400_RBK_DREAM_CAT2_PTM_01);

fbTD400Com_DREAM_CAT2_PTM_01(SerialRXBuffer := SerialRXBuffer_DREAM_CAT2_PTM_01,
                             SerialTXBuffer := SerialTXBuffer_DREAM_CAT2_PTM_01,
                             stTD400Control := stTD400_CTRL_DREAM_CAT2_PTM_01,
                             stTD400Status => stTD400_RBK_DREAM_CAT2_PTM_01);

//DREAM_CAT2_PTM_01.M_Serial_IO(stTD400_RBK_DREAM_CAT2_PTM_01);

(*Leybold pump-roughing section-booster pump*)
//DREAM_ROUGH2_PTM_01 (TD400)
fbTD400SerialIO_DREAM_ROUGH2_PTM_01(iq_stPTM := DREAM_ROUGH2_PTM_01.iq_stPtm,
                                    iq_stTD400Control := stTD400_CTRL_DREAM_ROUGH2_PTM_01,
                                    iq_stTD400Status := stTD400_RBK_DREAM_ROUGH2_PTM_01);

fbTD400Com_DREAM_ROUGH2_PTM_01(SerialRXBuffer := SerialRXBuffer_DREAM_ROUGH2_PTM_01,
                               SerialTXBuffer := SerialTXBuffer_DREAM_ROUGH2_PTM_01,
                               stTD400Control := stTD400_CTRL_DREAM_ROUGH2_PTM_01,
                               stTD400Status => stTD400_RBK_DREAM_ROUGH2_PTM_01);

//DREAM_ROUGH2_PTM_01.M_Serial_IO(stTD400_RBK_DREAM_ROUGH2_PTM_01);

//DREAM_ROUGH2_PTM_01 (TD400)
fbTD400SerialIO_DREAM_ROUGH2_PTM_02(iq_stPTM := DREAM_ROUGH2_PTM_02.iq_stPtm,
                                    iq_stTD400Control := stTD400_CTRL_DREAM_ROUGH2_PTM_02,
                                    iq_stTD400Status := stTD400_RBK_DREAM_ROUGH2_PTM_02);

fbTD400Com_DREAM_ROUGH2_PTM_02(SerialRXBuffer := SerialRXBuffer_DREAM_ROUGH2_PTM_02,
                               SerialTXBuffer := SerialTXBuffer_DREAM_ROUGH2_PTM_02,
                               stTD400Control := stTD400_CTRL_DREAM_ROUGH2_PTM_02,
                               stTD400Status => stTD400_RBK_DREAM_ROUGH2_PTM_02);

//DREAM_ROUGH2_PTM_02.M_Serial_IO(stTD400_RBK_DREAM_ROUGH2_PTM_02);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>